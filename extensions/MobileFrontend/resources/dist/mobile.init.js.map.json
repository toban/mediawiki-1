{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.init/editor.js","webpack://mfModules.[name]/./src/mobile.init/editorLoadingOverlay.js","webpack://mfModules.[name]/./src/mobile.init/eventLogging/schemaEditAttemptStep.js","webpack://mfModules.[name]/./src/mobile.init/eventLogging/schemaMobileWebSearch.js","webpack://mfModules.[name]/./src/mobile.init/eventLogging/schemaVisualEditorFeatureUse.js","webpack://mfModules.[name]/./src/mobile.init/lazyLoadedImages.js","webpack://mfModules.[name]/./src/mobile.init/mobile.init.js","webpack://mfModules.[name]/./src/mobile.init/toggling.js"],"names":["M","require","util","editorLoadingOverlay","OverlayManager","$allEditLinks","$","user","mw","CtaDrawer","blacklisted","test","navigator","userAgent","contentModel","config","get","veConfig","editCount","editorPath","setupEditor","page","skin","currentPageHTMLParser","router","uri","fragment","editorOverride","overlayManager","getSingleton","isNewPage","id","firstInitDone","on","ev","elem","section","length","getParamValue","href","navigate","preventDefault","onEditLinkClick","this","add","sectionId","animationDelayDeferred","abortableDataPromise","loadingOverlay","overlayPromise","scrollTop","window","pageYOffset","$content","editorOptions","fakeScroll","api","Api","licenseMsg","getLicenseMsg","title","titleObj","isAnon","oldId","contentLang","attr","contentDir","sessionId","Uri","query","editingStatsId","generateRandomSessionId","initMechanism","logInit","editor","track","action","type","mechanism","editor_interface","editing_session_id","shouldLoadVisualEditor","isVisualEditorEnabled","preferredEditor","defaultEditor","tokenData","storage","getObject","expires","Date","now","remove","token","setObject","set","parseInt","slice","getId","options","getPreferredEditor","visualEditorNamespaces","namespaces","isWikiText","indexOf","loadSourceEditor","hook","fire","loader","using","then","undefined","Deferred","$page","$sectionTop","enableVisualSectionEditing","document","body","addClass","closest","prop","getBoundingClientRect","top","css","transform","setTimeout","resolve","abort","removeClass","mode","dataPromise","libs","ve","targetLoader","requestPageData","getPrefixedDb","sessionStore","targetName","addPlugin","loadModules","VisualEditorOverlay","SourceEditorOverlay","Promise","all","overlay","getLoadingPromise","overlayData","stack","replaceCurrent","error","apiResponse","back","show","appendChild","$el","notify","getErrorMessage","msg","i","toString","getPath","history","pushState","veaction","replaceState","init","currentPage","isReadOnly","editRestrictions","find","hide","hideSectionEditIcons","Array","isArray","drawer","showLoginDrawer","content","signupQueryParams","warning","route","checkRoute","bindEditLinksLoginDrawer","bindEditLinksSorryToast","module","exports","isMissing","isEditingSupported","isSupported","inNamespace","fakeToolbar","Overlay","afterShow","afterHide","$fakeToolbar","className","noHeader","isBorderBox","onBeforeExit","exit","prototype","call","appendTo","Schema","sampleRate","actionPrefixMap","timing","schemaEditAttemptStep","trackdebug","exists","eventLog","firstChange","saveIntent","saveAttempt","saveSuccess","saveFailure","page_id","revision_id","page_title","page_ns","user_id","user_class","user_editcount","mw_version","platform","integration","page_token","getPageviewToken","session_token","version","trackSubscribe","topic","data","actionPrefix","timeStamp","duration","anonymous_user_token","bucket","Math","round","event","ready","log","warn","abort_type","computeDuration","message","is_oversample","inSample","console","apply","arguments","defaults","schemaMobileWebSearch","platformVersion","schemaVisualEditorFeatureUse","feature","editingSessionId","lazyImageLoader","imagePlaceholders","queryPlaceholders","getElementById","observer","IntersectionObserver","entries","forEach","entry","placeholder","target","isIntersecting","loadImage","unobserve","rootMargin","threshold","observe","placeholderClass","addEventListener","toggling","lazyLoadedImages","skinName","isPageContentModelEditable","mfUtil","$window","getWindow","$html","getDocument","Skin","eventBus","apply2","fn1","fn2","updateFontSize","userFontSize","debounce","emit","throttle","$container","prefix","$contentContainer","Toggler","removeAttr","mfTempOpenSection"],"mappings":"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","file":"mobile.init.js","sourcesContent":["/* global $ */\nvar M = require( '../mobile.startup/moduleLoaderSingleton' ),\n\tutil = require( '../mobile.startup/util' ),\n\teditorLoadingOverlay = require( './editorLoadingOverlay' ),\n\tOverlayManager = require( '../mobile.startup/OverlayManager' ),\n\t// #ca-edit, .mw-editsection are standard MediaWiki elements\n\t// .edit-link comes from MobileFrontend user page creation CTA\n\t$allEditLinks = $( '#ca-edit, .mw-editsection a, .edit-link' ),\n\tuser = mw.user,\n\tCtaDrawer = require( '../mobile.startup/CtaDrawer' ),\n\t// FIXME: Disable on IE < 10 for time being\n\tblacklisted = /MSIE \\d\\./.test( navigator.userAgent ),\n\tcontentModel = mw.config.get( 'wgPageContentModel' ),\n\tveConfig = mw.config.get( 'wgVisualEditorConfig' ),\n\teditCount = mw.config.get( 'wgUserEditCount' ),\n\teditorPath = /^\\/editor\\/(\\d+|T-\\d+|all)$/;\n\n/**\n * Event handler for edit link clicks. Will prevent default link\n * behaviour and will not allow propagation\n *\n * @method\n * @ignore\n * @param {HTMLElement} elem\n * @param {jQuery.Event} ev\n * @param {Router} router\n */\nfunction onEditLinkClick( elem, ev, router ) {\n\tvar section;\n\tif ( $allEditLinks.length === 1 ) {\n\t\t// If section edit links are not available, the only edit link\n\t\t// should allow editing the whole page (T232170)\n\t\tsection = 'all';\n\t} else {\n\t\tsection = mw.util.getParamValue( 'section', elem.href ) || 'all';\n\t}\n\t// Don't do anything for section edit links for different pages (transcluded)\n\tif ( mw.config.get( 'wgPageName' ) !== mw.util.getParamValue( 'title', elem.href ) ) {\n\t\treturn;\n\t}\n\trouter.navigate( '#/editor/' + section );\n\t// DO NOT USE stopPropagation or you'll break click tracking in WikimediaEvents\n\t// You DO NOT NEED to\n\t// prevent folding section when clicking Edit by stopping propagation\n\t// as this is a concern of the Toggler class and taken care of by inspecting\n\t// !ev.target.href (see Toggler.js)\n\t// avoid navigating to ?action=edit\n\tev.preventDefault();\n}\n\n/**\n * Retrieve the user's preferred editor setting. If none is set, return the default\n * editor for this wiki.\n *\n * @method\n * @ignore\n * @return {string} Either 'VisualEditor' or 'SourceEditor'\n */\nfunction getPreferredEditor() {\n\tvar defaultEditor, tokenData, anonid,\n\t\tpreferredEditor = mw.storage.get( 'preferredEditor' );\n\tif ( preferredEditor ) {\n\t\treturn preferredEditor;\n\t}\n\tdefaultEditor = mw.config.get( 'wgMFDefaultEditor' );\n\t// Handle the ABTest case\n\ttokenData = mw.storage.getObject( 'MFDefaultEditorABToken' );\n\tif ( tokenData && tokenData.expires < Date.now() ) {\n\t\t// The storage never expires by itself. We should keep this for a while, even if we remove\n\t\t// the rest of this code, to clean up after ourselves.\n\t\tmw.storage.remove( 'MFDefaultEditorABToken' );\n\t\ttokenData = null;\n\t}\n\tif ( defaultEditor === 'abtest' ) {\n\t\tif ( mw.user.isAnon() ) {\n\t\t\tif ( !tokenData ) {\n\t\t\t\ttokenData = {\n\t\t\t\t\ttoken: mw.user.generateRandomSessionId(),\n\t\t\t\t\t// 90 days\n\t\t\t\t\texpires: Date.now() + 90 * 24 * 60 * 60 * 1000\n\t\t\t\t};\n\t\t\t\tmw.storage.setObject( 'MFDefaultEditorABToken', tokenData );\n\t\t\t}\n\t\t\tmw.config.set( 'wgMFSchemaEditAttemptStepAnonymousUserId', tokenData.token );\n\t\t\tanonid = parseInt( tokenData.token.slice( 0, 8 ), 16 );\n\t\t\tdefaultEditor = anonid % 2 === 0 ? 'source' : 'visual';\n\t\t\tmw.config.set( 'wgMFSchemaEditAttemptStepBucket', 'default-' + defaultEditor );\n\t\t} else if ( mw.config.get( 'wgUserEditCount' ) <= 100 ) {\n\t\t\tdefaultEditor = mw.user.getId() % 2 === 0 ? 'source' : 'visual';\n\t\t\tmw.config.set( 'wgMFSchemaEditAttemptStepBucket', 'default-' + defaultEditor );\n\t\t} else {\n\t\t\tdefaultEditor = 'source';\n\t\t}\n\t}\n\tswitch ( defaultEditor ) {\n\t\tcase 'source':\n\t\t\treturn 'SourceEditor';\n\t\tcase 'visual':\n\t\t\treturn 'VisualEditor';\n\t\tcase 'preference':\n\t\t\treturn mw.user.options.get( 'visualeditor-editor' ) === 'visualeditor' ? 'VisualEditor' : 'SourceEditor';\n\t}\n\t// In the event of misconfiguration, fall back to source\n\treturn 'SourceEditor';\n}\n\n/**\n * Initialize the edit button so that it launches the editor interface when clicked.\n *\n * @method\n * @ignore\n * @param {Page} page The page to edit.\n * @param {Skin} skin\n * @param {PageHTMLParser} currentPageHTMLParser\n * @param {Router} router\n */\nfunction setupEditor( page, skin, currentPageHTMLParser, router ) {\n\tvar uri, fragment, editorOverride,\n\t\toverlayManager = OverlayManager.getSingleton(),\n\t\tisNewPage = page.id === 0,\n\t\tfirstInitDone = false;\n\n\t$allEditLinks.on( 'click', function ( ev ) {\n\t\tonEditLinkClick( this, ev, overlayManager.router );\n\t} );\n\toverlayManager.add( editorPath, function ( sectionId ) {\n\t\tvar\n\t\t\tscrollTop = window.pageYOffset,\n\t\t\t$content = $( '#mw-content-text' ),\n\t\t\teditorOptions = {\n\t\t\t\toverlayManager: overlayManager,\n\t\t\t\tcurrentPageHTMLParser: currentPageHTMLParser,\n\t\t\t\tfakeScroll: 0,\n\t\t\t\tapi: new mw.Api(),\n\t\t\t\tlicenseMsg: skin.getLicenseMsg(),\n\t\t\t\ttitle: page.title,\n\t\t\t\ttitleObj: page.titleObj,\n\t\t\t\tisAnon: user.isAnon(),\n\t\t\t\tisNewPage: isNewPage,\n\t\t\t\teditCount: editCount,\n\t\t\t\toldId: mw.util.getParamValue( 'oldid' ),\n\t\t\t\tcontentLang: $content.attr( 'lang' ),\n\t\t\t\tcontentDir: $content.attr( 'dir' ),\n\t\t\t\tsessionId: mw.config.get( 'wgWMESchemaEditAttemptStepSessionId' ) ||\n\t\t\t\t\tmw.Uri().query.editingStatsId ||\n\t\t\t\t\tuser.generateRandomSessionId()\n\t\t\t},\n\t\t\tanimationDelayDeferred, abortableDataPromise, loadingOverlay, overlayPromise,\n\t\t\tinitMechanism = mw.util.getParamValue( 'redlink' ) ? 'new' : 'click';\n\n\t\tif ( sectionId !== 'all' ) {\n\t\t\teditorOptions.sectionId = page.isWikiText() ? sectionId : undefined;\n\t\t}\n\n\t\tfunction showLoading() {\n\t\t\tvar $page, $content, $sectionTop, fakeScroll, enableVisualSectionEditing;\n\n\t\t\t$( document.body ).addClass( 've-loading' );\n\n\t\t\t$page = $( '#mw-mf-page-center' );\n\t\t\t$content = $( '#content' );\n\t\t\tif ( sectionId === '0' || sectionId === 'all' ) {\n\t\t\t\t$sectionTop = $( '#bodyContent' );\n\t\t\t} else {\n\t\t\t\t$sectionTop = $( '[data-section=\"' + sectionId + '\"]' )\n\t\t\t\t\t.closest( 'h1, h2, h3, h4, h5, h6' );\n\t\t\t\t// When loading on action=edit URLs, there is no page content\n\t\t\t\tif ( !$sectionTop.length ) {\n\t\t\t\t\t$sectionTop = $( '#bodyContent' );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Pretend that we didn't just scroll the page to the top.\n\t\t\t$page.prop( 'scrollTop', scrollTop );\n\t\t\t// Then, pretend that we're scrolling to the position of the clicked heading.\n\t\t\tfakeScroll = $sectionTop[0].getBoundingClientRect().top;\n\t\t\t// Adjust for height of the toolbar.\n\t\t\tfakeScroll -= 48;\n\t\t\tif ( shouldLoadVisualEditor() ) {\n\t\t\t\tenableVisualSectionEditing = veConfig.enableVisualSectionEditing === true ||\n\t\t\t\t\t// === ve.init.mw.MobileArticleTarget.static.trackingName\n\t\t\t\t\tveConfig.enableVisualSectionEditing === 'mobile';\n\t\t\t\tif ( sectionId === '0' || sectionId === 'all' || enableVisualSectionEditing ) {\n\t\t\t\t\t// Adjust for surface padding. Only needed if we're at the beginning of the doc.\n\t\t\t\t\tfakeScroll -= 16;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( sectionId === '0' || sectionId === 'all' ) {\n\t\t\t\t\tfakeScroll -= 16;\n\t\t\t\t}\n\t\t\t}\n\t\t\t$content.css( {\n\t\t\t\t// Use transform instead of scroll for smoother animation (via CSS transitions).\n\t\t\t\ttransform: 'translate( 0, ' + -fakeScroll + 'px )',\n\t\t\t\t// If the clicked heading is near the end of the page, we might need to insert\n\t\t\t\t// some extra space to allow us to scroll \"beyond the end\" of the page.\n\t\t\t\t'padding-bottom': '+=' + fakeScroll,\n\t\t\t\t'margin-bottom': '-=' + fakeScroll\n\t\t\t} );\n\t\t\teditorOptions.fakeScroll = fakeScroll;\n\t\t\tsetTimeout( animationDelayDeferred.resolve, 500 );\n\t\t}\n\n\t\tfunction clearLoading() {\n\t\t\tif ( abortableDataPromise && abortableDataPromise.abort ) {\n\t\t\t\tabortableDataPromise.abort();\n\t\t\t}\n\n\t\t\t$( '#content' ).css( {\n\t\t\t\ttransform: '',\n\t\t\t\t'padding-bottom': '',\n\t\t\t\t'margin-bottom': ''\n\t\t\t} );\n\n\t\t\t$( document.body ).removeClass( 've-loading' );\n\t\t}\n\n\t\t/**\n\t\t * Log init event to edit schema.\n\t\t * Need to log this from outside the Overlay object because that module\n\t\t * won't have loaded yet.\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @param {string} editor name e.g. wikitext or visualeditor\n\t\t * @method\n\t\t */\n\t\tfunction logInit( editor ) {\n\t\t\tif ( firstInitDone ) {\n\t\t\t\teditorOptions.sessionId = user.generateRandomSessionId();\n\t\t\t}\n\t\t\tmw.track( 'mf.schemaEditAttemptStep', {\n\t\t\t\taction: 'init',\n\t\t\t\ttype: 'section',\n\t\t\t\tmechanism: initMechanism,\n\t\t\t\t/* eslint-disable camelcase */\n\t\t\t\teditor_interface: editor,\n\t\t\t\tediting_session_id: editorOptions.sessionId\n\t\t\t\t/* eslint-enable camelcase */\n\t\t\t} );\n\t\t\tfirstInitDone = true;\n\t\t}\n\n\t\t/**\n\t\t * Check whether VisualEditor should be loaded\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {bool}\n\t\t */\n\t\tfunction shouldLoadVisualEditor() {\n\t\t\tvar\n\t\t\t\t// FIXME: Should we consider default site options and user prefs?\n\t\t\t\tisVisualEditorEnabled = !!veConfig,\n\t\t\t\tpreferredEditor = getPreferredEditor(),\n\t\t\t\tvisualEditorNamespaces = ( veConfig && veConfig.namespaces ) || [];\n\n\t\t\treturn isVisualEditorEnabled &&\n\n\t\t\t\t// Only for pages with a wikitext content model\n\t\t\t\tpage.isWikiText() &&\n\n\t\t\t\t// Only in enabled namespaces\n\t\t\t\tvisualEditorNamespaces.indexOf( mw.config.get( 'wgNamespaceNumber' ) ) !== -1 &&\n\n\t\t\t\t// Not on pages which are outputs of the Page Translation feature\n\t\t\t\tmw.config.get( 'wgTranslatePageTranslation' ) !== 'translation' &&\n\n\t\t\t\t(\n\t\t\t\t\t// If the user prefers the VisualEditor or the user has no preference and\n\t\t\t\t\t// the VisualEditor is the default editor for this wiki\n\t\t\t\t\tpreferredEditor === 'VisualEditor' ||\n\t\t\t\t\t// We've loaded it via the URL for this request\n\t\t\t\t\teditorOverride === 'VisualEditor'\n\t\t\t\t) &&\n\n\t\t\t\teditorOverride !== 'SourceEditor';\n\t\t}\n\n\t\t/**\n\t\t * Load source editor\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {jQuery.Promise} Promise resolved with the editor overlay\n\t\t */\n\t\tfunction loadSourceEditor() {\n\t\t\tlogInit( 'wikitext' );\n\t\t\t// Inform other interested code that we're loading the editor\n\t\t\tmw.hook( 'mobileFrontend.editorOpening' ).fire();\n\n\t\t\treturn mw.loader.using( 'mobile.editor.overlay' ).then( function () {\n\t\t\t\tvar SourceEditorOverlay = M.require( 'mobile.editor.overlay/SourceEditorOverlay' );\n\t\t\t\treturn new SourceEditorOverlay( editorOptions );\n\t\t\t} );\n\t\t}\n\n\t\t/**\n\t\t * Load visual editor. If it fails to load for any reason, load the source editor instead.\n\t\t *\n\t\t * @private\n\t\t * @ignore\n\t\t * @method\n\t\t * @return {jQuery.Promise} Promise resolved with the editor overlay\n\t\t */\n\t\tfunction loadVisualEditorMaybe() {\n\t\t\tlogInit( 'visualeditor' );\n\t\t\t// Inform other interested code that we're loading the editor\n\t\t\tmw.hook( 'mobileFrontend.editorOpening' ).fire();\n\n\t\t\teditorOptions.mode = 'visual';\n\t\t\teditorOptions.dataPromise = mw.loader.using( 'ext.visualEditor.targetLoader' ).then( function () {\n\t\t\t\tabortableDataPromise = mw.libs.ve.targetLoader.requestPageData(\n\t\t\t\t\teditorOptions.mode,\n\t\t\t\t\teditorOptions.titleObj.getPrefixedDb(),\n\t\t\t\t\t{\n\t\t\t\t\t\tsessionStore: true,\n\t\t\t\t\t\tsection: editorOptions.sectionId === undefined ?\n\t\t\t\t\t\t\tnull : editorOptions.sectionId,\n\t\t\t\t\t\toldId: editorOptions.oldId || undefined,\n\t\t\t\t\t\t// Should be ve.init.mw.MobileArticleTarget.static.trackingName,\n\t\t\t\t\t\t// but the class hasn't loaded yet.\n\t\t\t\t\t\ttargetName: 'mobile'\n\t\t\t\t\t} );\n\t\t\t\treturn abortableDataPromise;\n\t\t\t} );\n\n\t\t\treturn mw.loader.using( 'ext.visualEditor.targetLoader' )\n\t\t\t\t.then( function () {\n\t\t\t\t\tmw.libs.ve.targetLoader.addPlugin( 'mobile.editor.ve' );\n\t\t\t\t\treturn mw.libs.ve.targetLoader.loadModules( editorOptions.mode );\n\t\t\t\t} )\n\t\t\t\t.then( function () {\n\t\t\t\t\tvar VisualEditorOverlay = M.require( 'mobile.editor.overlay/VisualEditorOverlay' ),\n\t\t\t\t\t\tSourceEditorOverlay = M.require( 'mobile.editor.overlay/SourceEditorOverlay' );\n\t\t\t\t\teditorOptions.SourceEditorOverlay = SourceEditorOverlay;\n\t\t\t\t\treturn new VisualEditorOverlay( editorOptions );\n\t\t\t\t}, function () {\n\t\t\t\t\treturn loadSourceEditor();\n\t\t\t\t} );\n\t\t}\n\n\t\tanimationDelayDeferred = util.Deferred();\n\n\t\t// showLoading() has to run after the overlay has opened, which disables page scrolling.\n\t\t// clearLoading() has to run after the loading overlay is hidden in any way\n\t\t// (either when loading is aborted, or when the editor overlay is shown instead).\n\t\tloadingOverlay = editorLoadingOverlay( showLoading, clearLoading );\n\n\t\tif ( shouldLoadVisualEditor() ) {\n\t\t\toverlayPromise = loadVisualEditorMaybe();\n\t\t} else {\n\t\t\toverlayPromise = loadSourceEditor();\n\t\t}\n\n\t\t// Wait for the scroll animation to finish before we show the editor overlay\n\t\tutil.Promise.all( [ overlayPromise, animationDelayDeferred ] ).then( function ( overlay ) {\n\t\t\t// Wait for the data to load before we show the editor overlay\n\t\t\toverlay.getLoadingPromise().then( function () {\n\t\t\t\t// Make sure the user did not close the loading overlay while we were waiting\n\t\t\t\tvar overlayData = overlayManager.stack[0];\n\t\t\t\tif ( !overlayData || overlayData.overlay !== loadingOverlay ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Show the editor!\n\t\t\t\toverlayManager.replaceCurrent( overlay );\n\t\t\t}, function ( error, apiResponse ) {\n\t\t\t\t// Could not load the editor.\n\t\t\t\toverlayManager.router.back();\n\t\t\t\tif ( error.show ) {\n\t\t\t\t\t// Probably a blockMessageDrawer returned because the user is blocked.\n\t\t\t\t\tdocument.body.appendChild( error.$el[ 0 ] );\n\t\t\t\t\terror.show();\n\t\t\t\t} else if ( apiResponse ) {\n\t\t\t\t\tmw.notify( editorOptions.api.getErrorMessage( apiResponse ) );\n\t\t\t\t} else {\n\t\t\t\t\tmw.notify( mw.msg( 'mobile-frontend-editor-error-loading' ) );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\treturn loadingOverlay;\n\t} );\n\n\t$( '#ca-edit a' ).prop( 'href', function ( i, href ) {\n\t\tvar uri = new mw.Uri( href );\n\t\t// By default the editor opens section 0 (lead section), rather than the whole article.\n\t\t// This might be changed in the future (T210659).\n\t\turi.query.section = '0';\n\t\treturn uri.toString();\n\t} );\n\n\tif ( !router.getPath() && ( mw.util.getParamValue( 'veaction' ) || mw.util.getParamValue( 'action' ) === 'edit' ) ) {\n\t\tif ( mw.util.getParamValue( 'veaction' ) === 'edit' ) {\n\t\t\teditorOverride = 'VisualEditor';\n\t\t} else if ( mw.util.getParamValue( 'veaction' ) === 'editsource' ) {\n\t\t\teditorOverride = 'SourceEditor';\n\t\t}\n\t\t// else: action=edit, for which we allow the default to take effect\n\t\tfragment = '#/editor/' + ( mw.util.getParamValue( 'section' ) || ( mw.util.getParamValue( 'action' ) === 'edit' && 'all' ) || '0' );\n\t\t// eslint-disable-next-line no-restricted-properties\n\t\tif ( window.history && history.pushState ) {\n\t\t\turi = mw.Uri();\n\t\t\tdelete uri.query.action;\n\t\t\tdelete uri.query.veaction;\n\t\t\tdelete uri.query.section;\n\t\t\t// Note: replaceState rather than pushState, because we're\n\t\t\t// just reformatting the URL to the equivalent-meaning for the\n\t\t\t// mobile site.\n\t\t\thistory.replaceState( null, document.title, uri.toString() + fragment );\n\t\t} else {\n\t\t\trouter.navigate( fragment );\n\t\t}\n\t}\n}\n\n/**\n * Hide any section id icons in the page. This will not hide the edit icon in the page action\n * menu.\n *\n * @method\n * @ignore\n * @param {PageHTMLParser} currentPageHTMLParser\n */\nfunction hideSectionEditIcons( currentPageHTMLParser ) {\n\tcurrentPageHTMLParser.$el.find( '.mw-editsection' ).hide();\n}\n\n/**\n * Show a drawer with log in / sign up buttons.\n *\n * @method\n * @ignore\n * @param {Router} router\n */\nfunction bindEditLinksLoginDrawer( router ) {\n\tvar drawer;\n\tfunction showLoginDrawer() {\n\t\tif ( !drawer ) {\n\t\t\tdrawer = new CtaDrawer( {\n\t\t\t\tcontent: mw.msg( 'mobile-frontend-editor-disabled-anon' ),\n\t\t\t\tsignupQueryParams: {\n\t\t\t\t\twarning: 'mobile-frontend-watchlist-signup-action'\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\tdrawer.show();\n\t}\n\t$allEditLinks.on( 'click', function ( ev ) {\n\t\tshowLoginDrawer();\n\t\tev.preventDefault();\n\t} );\n\trouter.route( editorPath, function () {\n\t\tshowLoginDrawer();\n\t} );\n\trouter.checkRoute();\n}\n\n/**\n * Setup the editor if the user can edit the page otherwise show a sorry toast.\n *\n * @method\n * @ignore\n * @param {Page} currentPage\n * @param {PageHTMLParser} currentPageHTMLParser\n * @param {Skin} skin\n * @param {Router} router\n */\nfunction init( currentPage, currentPageHTMLParser, skin, router ) {\n\tvar isReadOnly, isEditable, editErrorMessage, editRestrictions;\n\t// see: https://www.mediawiki.org/wiki/Manual:Interface/JavaScript#Page-specific\n\tisReadOnly = mw.config.get( 'wgMinervaReadOnly' );\n\tisEditable = !isReadOnly && mw.config.get( 'wgIsProbablyEditable' );\n\n\tif ( isEditable ) {\n\t\t// Edit button updated in setupEditor.\n\t\tsetupEditor( currentPage, skin, currentPageHTMLParser, router );\n\t} else {\n\t\thideSectionEditIcons( currentPageHTMLParser );\n\t\teditRestrictions = mw.config.get( 'wgRestrictionEdit' );\n\t\tif ( mw.user.isAnon() && Array.isArray( editRestrictions ) && editRestrictions.indexOf( '*' ) !== -1 ) {\n\t\t\tbindEditLinksLoginDrawer( router );\n\t\t} else {\n\t\t\teditErrorMessage = isReadOnly ? mw.msg( 'apierror-readonly' ) : mw.msg( 'mobile-frontend-editor-disabled' );\n\t\t\tbindEditLinksSorryToast( editErrorMessage, router );\n\t\t}\n\t}\n}\n\n/**\n * Wire up events that ensure we\n * show a toast message with sincere condolences when user navigates to\n * #/editor or clicks on an edit button\n *\n * @method\n * @ignore\n * @param {string} msg Message for sorry message\n * @param {Router} router\n */\nfunction bindEditLinksSorryToast( msg, router ) {\n\t$allEditLinks.on( 'click', function ( ev ) {\n\t\tmw.notify( msg );\n\t\tev.preventDefault();\n\t} );\n\trouter.route( editorPath, function () {\n\t\tmw.notify( msg );\n\t} );\n\trouter.checkRoute();\n}\n\nmodule.exports = function ( currentPage, currentPageHTMLParser, skin ) {\n\tvar isMissing = currentPage.id === 0,\n\t\trouter = mw.loader.require( 'mediawiki.router' ),\n\t\tisEditingSupported = router.isSupported() && !blacklisted;\n\n\tif ( contentModel !== 'wikitext' ) {\n\t\t// Only load the wikitext editor on wikitext. Otherwise we'll rely on the fallback behaviour\n\t\t// (You can test this on MediaWiki:Common.css) ?action=edit url (T173800)\n\t\treturn;\n\t}\n\n\tif ( mw.util.getParamValue( 'undo' ) ) {\n\t\t// Our fancy editor doesn't support undo, but we can rely on the fallback.\n\t\treturn;\n\t}\n\n\tif ( !isEditingSupported ) {\n\t\t// Browser doesn't support mobile editor (or is blacklisted), use the fallback editor.\n\t\treturn;\n\t}\n\n\tif ( currentPage.inNamespace( 'file' ) && isMissing ) {\n\t\t// Is a new file page (enable upload image only) Bug 58311\n\t\tbindEditLinksSorryToast( mw.msg( 'mobile-frontend-editor-uploadenable' ), router );\n\t} else {\n\t\t// Edit button is currently hidden. A call to init() will update it as needed.\n\t\tinit( currentPage, currentPageHTMLParser, skin, router );\n\t}\n};\n","var\n\tfakeToolbar = require( './fakeToolbar' ),\n\tOverlay = require( '../mobile.startup/Overlay' );\n\n/**\n * Like loadingOverlay(), but with a fake editor toolbar instead of the spinner.\n *\n * @param {Function} afterShow Callback which runs after overlay is shown\n * @param {Function} afterHide Callback which runs after overlay is hidden\n * @return {Overlay}\n */\nfunction editorLoadingOverlay( afterShow, afterHide ) {\n\tvar\n\t\t$fakeToolbar = fakeToolbar(),\n\t\toverlay = new Overlay( {\n\t\t\tclassName: 'overlay overlay-loading',\n\t\t\tnoHeader: true,\n\t\t\tisBorderBox: false,\n\t\t\tonBeforeExit: function ( exit ) {\n\t\t\t\texit();\n\t\t\t\tafterHide();\n\t\t\t}\n\t\t} );\n\n\toverlay.show = function () {\n\t\tOverlay.prototype.show.call( this );\n\t\tafterShow();\n\t};\n\n\t$fakeToolbar.appendTo( overlay.$el.find( '.overlay-content' ) );\n\n\t// Animate the toolbar sliding into place.\n\t$fakeToolbar.addClass( 'toolbar-hidden' );\n\tsetTimeout( function () {\n\t\t$fakeToolbar.addClass( 'toolbar-shown' );\n\t\tsetTimeout( function () {\n\t\t\t$fakeToolbar.addClass( 'toolbar-shown-done' );\n\t\t}, 250 );\n\t} );\n\n\treturn overlay;\n}\n\nmodule.exports = editorLoadingOverlay;\n","module.exports = function () {\n\tvar trackdebug = !!mw.util.getParamValue( 'trackdebug' );\n\n\tif ( !mw.config.exists( 'wgWMESchemaEditAttemptStepSamplingRate' ) ) {\n\t\treturn;\n\t}\n\n\t( function () {\n\t\tvar // Schema class is provided by ext.eventLogging\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\tuser = mw.user,\n\t\t\tsampleRate = mw.config.get( 'wgWMESchemaEditAttemptStepSamplingRate' ),\n\t\t\tactionPrefixMap = {\n\t\t\t\tfirstChange: 'first_change',\n\t\t\t\tsaveIntent: 'save_intent',\n\t\t\t\tsaveAttempt: 'save_attempt',\n\t\t\t\tsaveSuccess: 'save_success',\n\t\t\t\tsaveFailure: 'save_failure'\n\t\t\t},\n\t\t\ttiming = {},\n\t\t\t/**\n\t\t\t * Edit schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:EditAttemptStep\n\t\t\t */\n\t\t\t/* eslint-disable camelcase */\n\t\t\tschemaEditAttemptStep = new Schema(\n\t\t\t\t'EditAttemptStep',\n\t\t\t\tsampleRate,\n\t\t\t\t{\n\t\t\t\t\tpage_id: mw.config.get( 'wgArticleId' ),\n\t\t\t\t\trevision_id: mw.config.get( 'wgRevisionId' ),\n\t\t\t\t\tpage_title: mw.config.get( 'wgPageName' ),\n\t\t\t\t\tpage_ns: mw.config.get( 'wgNamespaceNumber' ),\n\t\t\t\t\tuser_id: user.getId(),\n\t\t\t\t\tuser_class: user.isAnon() ? 'IP' : undefined,\n\t\t\t\t\tuser_editcount: mw.config.get( 'wgUserEditCount', 0 ),\n\t\t\t\t\tmw_version: mw.config.get( 'wgVersion' ),\n\t\t\t\t\tplatform: 'phone',\n\t\t\t\t\tintegration: 'page',\n\t\t\t\t\tpage_token: user.getPageviewToken(),\n\t\t\t\t\tsession_token: user.sessionId(),\n\t\t\t\t\tversion: 1\n\t\t\t\t}\n\t\t\t);\n\t\t\t/* eslint-enable camelcase */\n\n\t\tfunction log() {\n\t\t\t// mw.log is a no-op unless resource loader is in debug mode, so\n\t\t\t// this allows trackdebug to work independently (T211698)\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply( console, arguments );\n\t\t}\n\n\t\tfunction computeDuration( action, event, timeStamp ) {\n\t\t\t// This is duplicated from the VisualEditor extension\n\t\t\t// (ve.init.mw.trackSubscriber.js). Changes to this should be kept in\n\t\t\t// sync with that file, so the data remains consistent.\n\t\t\tif ( event.timing !== undefined ) {\n\t\t\t\treturn event.timing;\n\t\t\t}\n\n\t\t\tswitch ( action ) {\n\t\t\t\tcase 'ready':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'loaded':\n\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\tcase 'firstChange':\n\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\tcase 'saveIntent':\n\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\tcase 'saveAttempt':\n\t\t\t\t\treturn timeStamp - timing.saveIntent;\n\t\t\t\tcase 'saveSuccess':\n\t\t\t\tcase 'saveFailure':\n\t\t\t\t\t// HERE BE DRAGONS: the caller must compute these themselves\n\t\t\t\t\t// for sensible results. Deliberately sabotage any attempts to\n\t\t\t\t\t// use the default by returning -1\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Do not rely on default timing value for saveSuccess/saveFailure' );\n\t\t\t\t\treturn -1;\n\t\t\t\tcase 'abort':\n\t\t\t\t\tswitch ( event.abort_type ) {\n\t\t\t\t\t\tcase 'preinit':\n\t\t\t\t\t\t\treturn timeStamp - timing.init;\n\t\t\t\t\t\tcase 'nochange':\n\t\t\t\t\t\tcase 'switchwith':\n\t\t\t\t\t\tcase 'switchwithout':\n\t\t\t\t\t\tcase 'switchnochange':\n\t\t\t\t\t\tcase 'abandon':\n\t\t\t\t\t\t\treturn timeStamp - timing.ready;\n\t\t\t\t\t\tcase 'abandonMidsave':\n\t\t\t\t\t\t\treturn timeStamp - timing.saveAttempt;\n\t\t\t\t\t}\n\t\t\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized abort type', event.type );\n\t\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tmw.log.warn( 'mf.schemaEditAttemptStep: Unrecognized action', action );\n\t\t\treturn -1;\n\t\t}\n\n\t\tmw.trackSubscribe( 'mf.schemaEditAttemptStep', function ( topic, data ) {\n\t\t\tvar actionPrefix = actionPrefixMap[ data.action ] || data.action,\n\t\t\t\ttimeStamp = mw.now(),\n\t\t\t\tduration = 0;\n\n\t\t\t// These are always the same for every event, but they can't be set in defaults,\n\t\t\t// because the mw.config values are not present yet then, because they are set\n\t\t\t// by JS code in editor.js. This is a little silly.\n\t\t\tif ( !mw.storage.get( 'preferredEditor' ) ) {\n\t\t\t\t// This check serves to stop us logging the id/bucket after the user has\n\t\t\t\t// switched editors for the first time. Future pageloads won't even set\n\t\t\t\t// the config values.\n\t\t\t\tif ( mw.config.get( 'wgMFSchemaEditAttemptStepAnonymousUserId' ) ) {\n\t\t\t\t\t// eslint-disable-next-line camelcase\n\t\t\t\t\tdata.anonymous_user_token = mw.config.get( 'wgMFSchemaEditAttemptStepAnonymousUserId' );\n\t\t\t\t}\n\t\t\t\tif ( mw.config.get( 'wgMFSchemaEditAttemptStepBucket' ) ) {\n\t\t\t\t\tdata.bucket = mw.config.get( 'wgMFSchemaEditAttemptStepBucket' );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Schema's kind of a mess of special properties\n\t\t\tif ( data.action === 'init' || data.action === 'abort' || data.action === 'saveFailure' ) {\n\t\t\t\tdata[ actionPrefix + '_type' ] = data.type;\n\t\t\t}\n\t\t\tif ( data.action === 'init' || data.action === 'abort' ) {\n\t\t\t\tdata[ actionPrefix + '_mechanism' ] = data.mechanism;\n\t\t\t}\n\t\t\tif ( data.action !== 'init' ) {\n\t\t\t\t// Schema actually does have an init_timing field, but we don't want to\n\t\t\t\t// store it because it's not meaningful.\n\t\t\t\tduration = Math.round( computeDuration( data.action, data, timeStamp ) );\n\t\t\t\tdata[ actionPrefix + '_timing' ] = duration;\n\t\t\t}\n\t\t\tif ( data.action === 'saveFailure' ) {\n\t\t\t\tdata[ actionPrefix + '_message' ] = data.message;\n\t\t\t}\n\n\t\t\t// Remove renamed properties\n\t\t\tdelete data.type;\n\t\t\tdelete data.mechanism;\n\t\t\tdelete data.timing;\n\t\t\tdelete data.message;\n\t\t\t// eslint-disable-next-line camelcase\n\t\t\tdata.is_oversample =\n\t\t\t\t!mw.eventLog.inSample( 1 / sampleRate );\n\n\t\t\tif ( data.action === 'abort' && data.abort_type !== 'switchnochange' ) {\n\t\t\t\ttiming = {};\n\t\t\t} else {\n\t\t\t\ttiming[ data.action ] = timeStamp;\n\t\t\t}\n\n\t\t\t// Switching between visual and source produces a chain of\n\t\t\t// abort/ready/loaded events and no init event, so suppress them for\n\t\t\t// consistency with desktop VE's logging.\n\t\t\tif ( data.abort_type === 'switchnochange' ) {\n\t\t\t\t// The initial abort, flagged as a switch\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( timing.abort ) {\n\t\t\t\t// An abort was previously logged\n\t\t\t\tif ( data.action === 'ready' ) {\n\t\t\t\t\t// Just discard the ready\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( data.action === 'loaded' ) {\n\t\t\t\t\t// Switch has finished; remove the abort timing so we stop discarding events.\n\t\t\t\t\tdelete timing.abort;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( trackdebug ) {\n\t\t\t\tlog( topic + '.' + data.action, duration + 'ms', data, schemaEditAttemptStep.defaults );\n\t\t\t} else {\n\t\t\t\tschemaEditAttemptStep.log( data, (\n\t\t\t\t\tmw.config.get( 'wgWMESchemaEditAttemptStepOversample' ) ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'all' ||\n\t\t\t\t\t// wikitext / visualeditor\n\t\t\t\t\tdata.editor_interface === mw.config.get( 'wgMFSchemaEditAttemptStepOversample' )\n\t\t\t\t) ? 1 : sampleRate );\n\t\t\t}\n\t\t} );\n\n\t}() );\n};\n","module.exports = function () {\n\t( function () {\n\t\tvar // Schema class provided by ext.eventLogging\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\t/**\n\t\t\t * MobileWebSearch schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n\t\t\t */\n\t\t\tschemaMobileWebSearch = new Schema(\n\t\t\t\t'MobileWebSearch',\n\t\t\t\t// todo: use a default value of 0 once config lands in production.\n\t\t\t\tmw.config.get( 'wgMFSchemaSearchSampleRate', 1 / 1000 ),\n\t\t\t\t/**\n\t\t\t\t * @property {Object} defaults Default options hash.\n\t\t\t\t * @property {string} defaults.platform Always \"mobileweb\"\n\t\t\t\t * @property {string} defaults.platformVersion The version of MobileFrontend\n\t\t\t\t *  that the user is using. One of \"stable\" or \"beta\"\n\t\t\t\t */\n\t\t\t\t{\n\t\t\t\t\tplatform: 'mobileweb',\n\t\t\t\t\tplatformVersion: mw.config.get( 'wgMFMode' )\n\t\t\t\t}\n\t\t\t);\n\n\t\tmw.trackSubscribe( 'mf.schemaMobileWebSearch', function ( topic, data ) {\n\t\t\tschemaMobileWebSearch.log( data );\n\t\t} );\n\t}() );\n};\n","module.exports = function () {\n\tvar trackdebug = !!mw.util.getParamValue( 'trackdebug' );\n\n\tif ( !mw.config.exists( 'wgWMESchemaEditAttemptStepSamplingRate' ) ) {\n\t\treturn;\n\t}\n\n\t// VisualEditorFeatureUse is intended to log whenever EditAttemptStep\n\t// does, so this file references its config for sampling rates and\n\t// oversampling.\n\n\t( function () {\n\t\tvar // Schema class provided by ext.eventLogging\n\t\t\tSchema = mw.eventLog.Schema,\n\t\t\tuser = mw.user,\n\t\t\tsampleRate = mw.config.get( 'wgWMESchemaEditAttemptStepSamplingRate' ),\n\t\t\t/**\n\t\t\t * Feature use schema\n\t\t\t * https://meta.wikimedia.org/wiki/Schema:VisualEditorFeatureUse\n\t\t\t */\n\t\t\t/* eslint-disable camelcase */\n\t\t\tschemaVisualEditorFeatureUse = new Schema(\n\t\t\t\t'VisualEditorFeatureUse',\n\t\t\t\tsampleRate,\n\t\t\t\t{\n\t\t\t\t\tuser_id: user.getId(),\n\t\t\t\t\tuser_editcount: mw.config.get( 'wgUserEditCount', 0 ),\n\t\t\t\t\tplatform: 'phone',\n\t\t\t\t\tintegration: 'page'\n\t\t\t\t}\n\t\t\t);\n\t\t\t/* eslint-enable camelcase */\n\n\t\tfunction log() {\n\t\t\t// mw.log is a no-op unless resource loader is in debug mode, so\n\t\t\t// this allows trackdebug to work independently (T211698)\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.log.apply( console, arguments );\n\t\t}\n\n\t\tmw.trackSubscribe( 'mf.schemaVisualEditorFeatureUse', function ( topic, data ) {\n\t\t\tvar event = {\n\t\t\t\tfeature: data.feature,\n\t\t\t\taction: data.action,\n\t\t\t\teditingSessionId: data.editing_session_id\n\t\t\t};\n\n\t\t\tif ( trackdebug ) {\n\t\t\t\tlog( topic, event );\n\t\t\t} else {\n\t\t\t\tschemaVisualEditorFeatureUse.log( event, (\n\t\t\t\t\tmw.config.get( 'wgWMESchemaEditAttemptStepOversample' ) ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'visualeditor' ||\n\t\t\t\t\tmw.config.get( 'wgMFSchemaEditAttemptStepOversample' ) === 'all'\n\t\t\t\t) ? 1 : sampleRate );\n\t\t\t}\n\t\t} );\n\n\t}() );\n};\n","/* global $ */\nconst lazyImageLoader = require( '../mobile.startup/lazyImages/lazyImageLoader' );\n\n/**\n * Initialise lazy loading images to supplement the HTML changes inside the\n * MobileFormatter.\n */\nfunction init() {\n\tif ( !mw.config.get( 'wgMFLazyLoadImages' ) ) {\n\t\treturn;\n\t}\n\n\tconst imagePlaceholders = lazyImageLoader.queryPlaceholders( document.getElementById( 'mw-content-text' ) );\n\n\tif ( 'IntersectionObserver' in window ) {\n\t\tconst observer = new IntersectionObserver(\n\t\t\t( entries ) => {\n\t\t\t\tentries.forEach( ( entry ) => {\n\t\t\t\t\tconst placeholder = entry.target;\n\t\t\t\t\t// If intersecting load image and stop observing it to free up resources.\n\t\t\t\t\tif ( entry.isIntersecting ) {\n\t\t\t\t\t\tlazyImageLoader.loadImage( placeholder );\n\t\t\t\t\t\tobserver.unobserve( placeholder );\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t},\n\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\t\t\t{\n\t\t\t\t// Setup the area for observing.\n\t\t\t\t// By default the root is the viewport.\n\t\t\t\t// We want the detection area to be as tall as 150% of the viewport height,\n\t\t\t\t// allowing elements to be detected before they reach the viewport.\n\t\t\t\t// This is achieved with a 50% bottom margin.\n\t\t\t\trootMargin: '0px 0px 50% 0px',\n\t\t\t\t// The default is 0 (meaning as soon as even one pixel is visible,\n\t\t\t\t// the callback will be run), however we explicitly set this so that\n\t\t\t\t// it is clear we have made this choice in case we want to revisit later.\n\t\t\t\tthreshold: 0\n\t\t\t}\n\t\t);\n\n\t\t// observe all the placeholders\n\t\timagePlaceholders.forEach( ( placeholder ) => {\n\t\t\tobserver.observe( placeholder );\n\t\t} );\n\t} else {\n\t\t/**\n\t\t * Adds the following class to identify the tap to click images on\n\t\t * older browsers that do not support IntersectionObserver:\n\t\t * lazy-image-placeholder--tap\n\t\t */\n\t\t// eslint-disable-next-line mediawiki/class-doc\n\t\t$( imagePlaceholders ).addClass( `${lazyImageLoader.placeholderClass}--tap` );\n\n\t\t// Tap to show (see T246767)\n\t\tdocument.addEventListener( 'click', function ( ev ) {\n\t\t\tif ( imagePlaceholders.indexOf( ev.target ) > -1 ) {\n\t\t\t\tlazyImageLoader.loadImage( ev.target );\n\t\t\t}\n\t\t} );\n\t}\n}\n\nmodule.exports = init;\n","/* global $ */\n\n// FIXME: make this an object with a constructor to facilitate testing\n// (see https://bugzilla.wikimedia.org/show_bug.cgi?id=44264)\n/**\n * mobileFrontend namespace\n *\n * @class mw.mobileFrontend\n * @singleton\n */\nvar skin,\n\tstorage = mw.storage,\n\ttoggling = require( './toggling' ),\n\tlazyLoadedImages = require( './lazyLoadedImages' ),\n\tskinName = mw.config.get( 'skin' ),\n\tisPageContentModelEditable = mw.config.get( 'wgMFIsPageContentModelEditable' ),\n\teditor = require( './editor' ),\n\tcurrentPage = require( '../mobile.startup/currentPage' )(),\n\tcurrentPageHTMLParser = require( '../mobile.startup/currentPageHTMLParser' )(),\n\tmfUtil = require( '../mobile.startup/util' ),\n\t$window = mfUtil.getWindow(),\n\t$html = mfUtil.getDocument(),\n\tSkin = require( '../mobile.startup/Skin' ),\n\teventBus = require( '../mobile.startup/eventBusSingleton' ),\n\tschemaMobileWebSearch = require( './eventLogging/schemaMobileWebSearch' ),\n\tschemaEditAttemptStep = require( './eventLogging/schemaEditAttemptStep' ),\n\tschemaVisualEditorFeatureUse = require( './eventLogging/schemaVisualEditorFeatureUse' );\n\nskin = Skin.getSingleton();\n\n/**\n * Given 2 functions, it returns a function that will run both with it's\n * context and parameters and return the results combined\n *\n * @private\n * @param {Function} fn1\n * @param {Function} fn2\n * @return {Function} which returns void\n */\nfunction apply2( fn1, fn2 ) {\n\treturn function () {\n\t\tfn1.apply( this, arguments );\n\t\tfn2.apply( this, arguments );\n\t};\n}\n\n/**\n * The `window`'s resize event debounced at 100 ms.\n * The `resize:throttled` event is the `window`'s\n * resize event throttled to 200 ms.\n *\n * @event resize\n */\n\n/**\n * The `window`'s scroll event debounced at 100 ms.\n * The `scroll:throttled` event is the `window`'s\n * scroll event throttled to 200 ms.\n *\n * @event scroll\n */\n\n$window\n\t.on( 'resize', apply2(\n\t\tmw.util.debounce( 100, function () { eventBus.emit( 'resize' ); } ),\n\t\t$.throttle( 200, function () { eventBus.emit( 'resize:throttled' ); } )\n\t) )\n\t.on( 'scroll', apply2(\n\t\tmw.util.debounce( 100, function () { eventBus.emit( 'scroll' ); } ),\n\t\t$.throttle( 200, function () { eventBus.emit( 'scroll:throttled' ); } )\n\t) );\n\n/**\n * Updates the font size based on the current value in storage\n */\nfunction updateFontSize() {\n\t// FIXME: Ideally 'regular' would come from a shared constant\n\t// (currently not possible without using webpack)\n\tvar userFontSize = storage.get( 'userFontSize', 'regular' );\n\t// The following classes are used here:\n\t// * mf-font-size-small\n\t// * mf-font-size-regular\n\t// * mf-font-size-large\n\t// * mf-font-size-x-large\n\t$html.addClass( 'mf-font-size-' + userFontSize );\n}\n\n// Font must be updated on back button press as users may click\n// back after changing font.\n$window.on( 'pageshow', function () {\n\tupdateFontSize();\n} );\nupdateFontSize();\n\n// Recruit volunteers through the console\n// (note console.log may not be a function so check via apply)\n/* eslint-disable no-console */\nif ( window.console && window.console.log && window.console.log.apply &&\n\t\tmw.config.get( 'wgMFEnableJSConsoleRecruitment' ) ) {\n\tconsole.log( mw.msg( 'mobile-frontend-console-recruit' ) );\n}\n/* eslint-enable no-console */\n\n// setup editor\nif ( !currentPage.inNamespace( 'special' ) && isPageContentModelEditable ) {\n\t// TODO: Mobile editor doesn't work well with other skins yet (it looks horribly broken\n\t// without some styles that are only defined by Minerva).\n\tif ( skinName === 'minerva' ) {\n\t\t// TODO: This code should not even be loaded on desktop.\n\t\t// Remove this check when that is fixed (T216537).\n\t\tif ( mw.config.get( 'wgMFMode' ) !== null ) {\n\t\t\teditor( currentPage, currentPageHTMLParser, skin );\n\t\t}\n\t}\n}\n\ntoggling();\nlazyLoadedImages();\n\n// Set up recording for the events we track. The module 'ext.eventLogging'\n// should already be loaded (this doesn't trigger a new HTTP request), but we\n// don't specify a hard dependency because EventLogging may not be installed.\nmw.loader.using( 'ext.eventLogging' ).then( function () {\n\tschemaMobileWebSearch();\n\tschemaEditAttemptStep();\n\tschemaVisualEditorFeatureUse();\n} );\n","/* global $ */\nmodule.exports = function () {\n\tvar\n\t\t$contentContainer = $( '#mw-content-text > .mw-parser-output' ),\n\t\tcurrentPage = require( '../mobile.startup/currentPage' )(),\n\t\tToggler = require( '../mobile.startup/Toggler' ),\n\t\teventBus = require( '../mobile.startup/eventBusSingleton' );\n\n\t// If there was no mw-parser-output wrapper, just use the parent.\n\tif ( $contentContainer.length === 0 ) {\n\t\t$contentContainer = $( '#mw-content-text' );\n\t}\n\n\t/**\n\t * Initialises toggling code.\n\t *\n\t * @method\n\t * @param {jQuery.Object} $container to enable toggling on\n\t * @param {string} prefix a prefix to use for the id.\n\t * @param {Page} page The current page\n\t * @ignore\n\t */\n\tfunction init( $container, prefix, page ) {\n\t\t// Distinguish headings in content from other headings.\n\t\t$container.find( '> h1,> h2,> h3,> h4,> h5,> h6' ).addClass( 'section-heading' )\n\t\t\t.removeAttr( 'onclick' );\n\t\t// Cleanup global as it is no longer needed. We check if it's undefined because\n\t\t// there is no guarantee this won't be run on other skins e.g. Vector or cached HTML.\n\t\tif ( window.mfTempOpenSection !== undefined ) {\n\t\t\tdelete window.mfTempOpenSection;\n\t\t}\n\t\t// eslint-disable-next-line no-new\n\t\tnew Toggler( {\n\t\t\t$container: $container,\n\t\t\tprefix: prefix,\n\t\t\tpage: page,\n\t\t\teventBus: eventBus\n\t\t} );\n\t}\n\n\tif (\n\t\t// Avoid this running on Watchlist.\n\t\t!currentPage.inNamespace( 'special' ) &&\n\t\tmw.config.get( 'wgAction' ) === 'view'\n\t) {\n\t\tinit( $contentContainer, 'content-', currentPage );\n\t}\n};\n"],"sourceRoot":""}