{"version":3,"sources":["webpack://mfModules.[name]/./src/mobile.startup/categoryOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/getDeviceLanguage.js","webpack://mfModules.[name]/./src/mobile.startup/languageOverlay/languageOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/loadingOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/mediaViewer/overlay.js","webpack://mfModules.[name]/./src/mobile.startup/mobile.startup.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/ReferencesHtmlScraperGateway.js","webpack://mfModules.[name]/./src/mobile.startup/references/references.js","webpack://mfModules.[name]/./src/mobile.startup/search/MobileWebSearchLogger.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchHeaderView.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchOverlay.js","webpack://mfModules.[name]/./src/mobile.startup/search/SearchResultsView.js","webpack://mfModules.[name]/./src/mobile.startup/search/searchHeader.js"],"names":["Overlay","require","promisedView","Anchor","m","header","module","exports","options","overlay","widget","className","headers","mw","msg","isAnon","href","label","additionalClassNames","loader","using","then","CategoryTabs","eventBus","api","title","$el","find","append","navigator","lang","languages","language","userLanguage","browserLanguage","systemLanguage","toLowerCase","undefined","getDeviceLanguage","loadLanguageSearcher","gateway","getPageLanguages","config","get","data","variants","deviceLanguage","languageOverlay","pageGateway","make","heading","test","icons","noHeader","spinner","appendTo","util","cancel","Promise","all","ImageCarousel","moduleLoader","mfExtend","time","View","PageGateway","Browser","Button","Icon","ReferencesGateway","ReferencesHtmlScraperGateway","Page","currentPage","PageHTMLParser","currentPageHTMLParser","Skin","OverlayManager","loadingOverlay","Drawer","CtaDrawer","showOnPageReload","toast","Watchstar","categoryOverlay","eventBusSingleton","Toggler","toc","TableOfContents","parseHTML","references","search","SearchOverlay","MobileWebSearchLogger","SearchGateway","lazyImages","lazyImageLoader","mediaViewer","amcOutreach","Section","mobileFrontend","define","this","prototype","getReference","ERROR_NOT_EXIST","ERROR_OTHER","apply","arguments","EXTERNAL_LINK_CLASS","getReferenceFromContainer","id","$container","$ol","$parent","result","Deferred","escapeSelector","substr","length","closest","hasClass","parent","addClass","resolve","text","getReferenceHtml","parentText","reject","promise","$reference","first","html","page","pageHTMLParser","decodeURIComponent","makeOnNestedReferenceClickHandler","onNestedReferenceClick","ev","target","tagName","getAttribute","textContent","referenceDrawer","props","errorIcon","error","name","isSmall","extend","showCollapseIcon","events","children","modifier","showReference","refNumber","onShowNestedReference","reference","drawer","nestedDrawer","log","warn","document","body","appendChild","hide","show","err","userSessionToken","searchSessionToken","_newUserSession","user","generateRandomSessionId","_newSearchSession","searchSessionCreatedAt","Date","getTime","onSearchShow","onSearchStart","track","action","timeOffsetSinceStart","onSearchResults","event","resultSetType","numberOfResults","results","timeToDisplayResults","onSearchResultClick","clickIndex","resultIndex","register","searchOverlay","logger","on","bind","SearchHeaderView","query","value","onInput","clearIcon","click","val","trigger","template","searchHeader","SearchResultsView","WatchstarPageList","params","placeholderMsg","performSearch","headerChrome","isBorderBox","stopPropagation","call","gatewayClass","router","onClickSearchContent","getDocument","$form","attr","type","setTimeout","onClickOverlayContent","hideKeyboardOnScroll","$input","onClickResult","$link","currentTarget","$result","emit","$results","index","originalEvent","preventDefault","back","window","location","postRender","timer","self","searchResults","searchContentLabel","noResultsMsg","searchContentNoResultsMsg","message","parse","clearSearch","$spinner","clearTimeout","$searchContent","$resultContainer","searchData","delay","showKeyboard","len","setSelectionRange","isCached","lastQuery","_pendingQuery","abort","xhr","toggleClass","filter","funnel","pages","el","resetSearch","feedback","prompt","feedbackLink","formHeader"],"mappings":"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","file":"mobile.startup.js","sourcesContent":["var\n\tOverlay = require( './Overlay' ),\n\tpromisedView = require( './promisedView' ),\n\tAnchor = require( './Anchor' ),\n\tm = require( './moduleLoaderSingleton' ),\n\theader = require( './headers' ).header;\n\n/**\n * Gets an overlay for displaying categories\n *\n * @param {Object} options Configuration options\n * @param {string} options.title of page to obtain categories for\n * @param {mw.Api} options.api for usage in CategoryTabs\n * @param {OO.EventEmitter} options.eventBus Object used to listen for category-added\n * and scroll:throttled events\n * @return {Overlay}\n */\nfunction categoryOverlay( options ) {\n\tvar overlay, widget;\n\toverlay = new Overlay( {\n\t\tclassName: 'category-overlay overlay',\n\t\theaders: [\n\t\t\theader(\n\t\t\t\tmw.msg( 'mobile-frontend-categories-heading' ),\n\t\t\t\toptions.isAnon ? [] : [\n\t\t\t\t\tnew Anchor( {\n\t\t\t\t\t\thref: '#/categories/add',\n\t\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-categories-add' ),\n\t\t\t\t\t\tadditionalClassNames: 'add continue'\n\t\t\t\t\t} )\n\t\t\t\t]\n\t\t\t)\n\t\t]\n\t} );\n\n\twidget = promisedView(\n\t\tmw.loader.using( 'mobile.categories.overlays' ).then( function () {\n\t\t\tvar categories = m.require( 'mobile.categories.overlays' ),\n\t\t\t\tCategoryTabs = categories.CategoryTabs;\n\n\t\t\treturn new CategoryTabs(\n\t\t\t\t{\n\t\t\t\t\teventBus: options.eventBus,\n\t\t\t\t\tapi: options.api,\n\t\t\t\t\ttitle: options.title\n\t\t\t\t}\n\t\t\t);\n\t\t} )\n\t);\n\toverlay.$el.find( '.overlay-content' ).append( widget.$el );\n\treturn overlay;\n}\n\nmodule.exports = categoryOverlay;\n","/**\n * Return the language code of the device in lowercase\n *\n * @ignore\n * @param {window.navigator} navigator\n * @return {string|undefined}\n */\nfunction getDeviceLanguage( navigator ) {\n\tconst lang = navigator.languages ?\n\t\tnavigator.languages[ 0 ] :\n\t\tnavigator.language || navigator.userLanguage ||\n\t\t\t\tnavigator.browserLanguage || navigator.systemLanguage;\n\n\treturn lang ? lang.toLowerCase() : undefined;\n}\n\nmodule.exports = getDeviceLanguage;\n","const\n\tm = require( '../moduleLoaderSingleton' ),\n\tgetDeviceLanguage = require( './getDeviceLanguage' ),\n\tOverlay = require( '../Overlay' ),\n\tpromisedView = require( '../promisedView' );\n\n/**\n * @ignore\n * @param {PageGateway} gateway\n * @return {jQuery.Promise} Resolves to LanguageSearcher\n */\nfunction loadLanguageSearcher( gateway ) {\n\treturn mw.loader.using( 'mobile.languages.structured' ).then( function () {\n\t\treturn gateway.getPageLanguages( mw.config.get( 'wgPageName' ), mw.config.get( 'wgUserLanguage' ) );\n\t} ).then( function ( data ) {\n\t\tconst LanguageSearcher = m.require( 'mobile.languages.structured/LanguageSearcher' );\n\n\t\treturn new LanguageSearcher( {\n\t\t\tlanguages: data.languages,\n\t\t\tvariants: data.variants,\n\t\t\tdeviceLanguage: getDeviceLanguage( navigator )\n\t\t} );\n\n\t} );\n}\n\n/**\n * Factory function that returns a language featured instance of an Overlay\n *\n * @param {PageGateway} pageGateway\n * @return {Overlay}\n */\nfunction languageOverlay( pageGateway ) {\n\treturn Overlay.make(\n\t\t{\n\t\t\theading: mw.msg( 'mobile-frontend-language-heading' ),\n\t\t\tclassName: 'overlay language-overlay'\n\t\t}, promisedView( loadLanguageSearcher( pageGateway ) )\n\t);\n}\n\n// To make knowing when async logic has resolved easier in tests\nlanguageOverlay.test = {\n\tloadLanguageSearcher: loadLanguageSearcher\n};\n\nmodule.exports = languageOverlay;\n","var\n\ticons = require( './icons' ),\n\tOverlay = require( './Overlay' );\n\n/**\n * Overlay that initially shows loading animation until\n * caller hides it with .hide()\n *\n * @return {Overlay}\n */\nfunction loadingOverlay() {\n\tvar overlay = new Overlay( {\n\t\tclassName: 'overlay overlay-loading',\n\t\tnoHeader: true\n\t} );\n\ticons.spinner().$el.appendTo( overlay.$el.find( '.overlay-content' ) );\n\treturn overlay;\n}\n\nmodule.exports = loadingOverlay;\n","var m = require( '../moduleLoaderSingleton' ),\n\tpromisedView = require( '../promisedView' ),\n\tutil = require( '../util' ),\n\theader = require( '../headers' ).header,\n\ticons = require( '../icons' ),\n\tOverlay = require( '../Overlay' );\n\n/**\n * Produce an overlay for mediaViewer\n *\n * @param {Object} options\n * @return {Overlay}\n */\nfunction mediaViewerOverlay( options ) {\n\tvar overlay = Overlay.make(\n\t\t{\n\t\t\theaders: [\n\t\t\t\theader( '', [], icons.cancel( 'gray' ) )\n\t\t\t],\n\t\t\tclassName: 'overlay media-viewer'\n\t\t},\n\t\tpromisedView(\n\t\t\tutil.Promise.all( [\n\t\t\t\tmw.loader.using( 'mobile.mediaViewer' )\n\t\t\t] ).then( function () {\n\t\t\t\tvar ImageCarousel = m.require( 'mobile.mediaViewer' ).ImageCarousel;\n\t\t\t\treturn new ImageCarousel( options );\n\t\t\t} )\n\t\t)\n\t);\n\n\treturn overlay;\n}\n\nmodule.exports = mediaViewerOverlay;\n","var\n\tmoduleLoader = require( './moduleLoaderSingleton' ),\n\tutil = require( './util' );\n\n// Expose the entry chunk through libraryTarget and library. This allows\n// arbitrary file access via ResourceLoader like\n// `mfModules['mobile.startup'].moduleLoader.require('mobile.startup/LoadingOverlay')`.\nmodule.exports = {\n\tmoduleLoader: moduleLoader,\n\tmfExtend: require( './mfExtend' ),\n\ttime: require( './time' ),\n\tutil,\n\theaders: require( './headers' ),\n\tView: require( './View' ),\n\tPageGateway: require( './PageGateway' ),\n\tBrowser: require( './Browser' ),\n\tButton: require( './Button' ),\n\tIcon: require( './Icon' ),\n\tReferencesGateway: require( './references/ReferencesGateway' ),\n\tReferencesHtmlScraperGateway: require( './references/ReferencesHtmlScraperGateway' ),\n\ticons: require( './icons' ),\n\tPage: require( './Page' ),\n\tcurrentPage: require( './currentPage' ),\n\tPageHTMLParser: require( './PageHTMLParser' ),\n\tcurrentPageHTMLParser: require( './currentPageHTMLParser' ),\n\tAnchor: require( './Anchor' ),\n\tSkin: require( './Skin' ),\n\tOverlayManager: require( './OverlayManager' ),\n\tOverlay: require( './Overlay' ),\n\tloadingOverlay: require( './loadingOverlay' ),\n\tDrawer: require( './Drawer' ),\n\tCtaDrawer: require( './CtaDrawer' ),\n\tshowOnPageReload: require( './showOnPageReload' ),\n\t// For Minerva compatibility (access deprecated)\n\ttoast: require( './showOnPageReload' ),\n\tWatchstar: require( './watchstar/watchstar' ),\n\tcategoryOverlay: require( './categoryOverlay' ),\n\teventBusSingleton: require( './eventBusSingleton' ),\n\tpromisedView: require( './promisedView' ),\n\tToggler: require( './Toggler' ),\n\ttoc: {\n\t\t// In case any old version of Minerva is cached.\n\t\tTableOfContents: () => {\n\t\t\treturn {\n\t\t\t\t// in the unlikely event old Minerva code got loaded with new MF.\n\t\t\t\t$el: util.parseHTML( '<div>' )\n\t\t\t};\n\t\t}\n\t},\n\treferences: require( './references/references' ),\n\tsearch: {\n\t\tSearchOverlay: require( './search/SearchOverlay' ),\n\t\tMobileWebSearchLogger: require( './search/MobileWebSearchLogger' ),\n\t\tSearchGateway: require( './search/SearchGateway' )\n\t},\n\tlazyImages: {\n\t\tlazyImageLoader: require( './lazyImages/lazyImageLoader' )\n\t},\n\tlanguageOverlay: require( './languageOverlay/languageOverlay' ),\n\tmediaViewer: {\n\t\toverlay: require( './mediaViewer/overlay' )\n\t},\n\tamcOutreach: require( './amcOutreach/amcOutreach' ),\n\tSection: require( './Section' )\n};\n\nmw.mobileFrontend = moduleLoader;\n\n// Setup a single export for new modules to fold all of the above lines into.\n// One export to rule them all!\nmoduleLoader.define( 'mobile.startup', module.exports );\n","/**\n * Abstract base class\n * Gateway for retrieving references\n *\n * @class ReferencesGateway\n * @abstract\n *\n * @param {mw.Api} api\n */\nfunction ReferencesGateway( api ) {\n\tthis.api = api;\n}\n\n/**\n * Return the matched reference via API or DOM query\n *\n * @memberof ReferencesGateway\n * @instance\n * @param {string} id CSS selector\n * @param {Page} page to find reference for\n * @param {PageHTMLParser} pageHTMLParser\n * @return {jQuery.Promise} resolves with an Object representing reference\n *  with a `text` property\n *  The promise should be rejected with ReferenceGateway.ERROR_NOT_EXIST:\n *  if the reference is not found.\n *  If for some reason locating the reference fails return ReferenceGateway.ERROR_OTHER.\n */\nReferencesGateway.prototype.getReference = null;\n\n/**\n * @memberof ReferencesGateway\n * @property ERROR_NOT_EXIST error code to be returned by getReference\n *  when a reference does not exist.\n */\nReferencesGateway.ERROR_NOT_EXIST = 'NOT_EXIST_ERROR';\n/**\n * @memberof ReferencesGateway\n * @property ERROR_OTHER error code to be returned by getReference\n *  under any other circumstance not covered\n *  by ERROR_NOT_EXIST. It should be used if it is unclear whether a reference exists or not.\n */\nReferencesGateway.ERROR_OTHER = 'OTHER_ERROR';\n\nmodule.exports = ReferencesGateway;\n","var ReferencesGateway = require( './ReferencesGateway' ),\n\tmfExtend = require( './../mfExtend' ),\n\tutil = require( './../util' );\n\n/**\n * Gateway for retrieving references via the content of the Page\n *\n * @class ReferencesHtmlScraperGateway\n * @extends ReferencesGateway\n * @inheritdoc\n */\nfunction ReferencesHtmlScraperGateway() {\n\tReferencesGateway.apply( this, arguments );\n}\n\nmfExtend( ReferencesHtmlScraperGateway, ReferencesGateway, {\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @property EXTERNAL_LINK_CLASS a CSS class to place on external links\n\t * in addition to the default 'external' class.\n\t */\n\tEXTERNAL_LINK_CLASS: 'external--reference',\n\t/**\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id of a DOM element in the page with '#' prefix.\n\t *  can be encoded or decoded.\n\t * @param {jQuery.Object} $container to scan for an element\n\t * @return {jQuery.Promise} that can be used by getReference\n\t */\n\tgetReferenceFromContainer: function ( id, $container ) {\n\t\tvar $el, $ol, $parent,\n\t\t\tresult = util.Deferred();\n\n\t\t$el = $container.find( '#' + util.escapeSelector( id.substr( 1 ) ) );\n\t\tif ( $el.length ) {\n\t\t\t// This finds either the inner <ol class=\"mw-extended-references\">, or the outer\n\t\t\t// <ol class=\"references\">\n\t\t\t$ol = $el.closest( 'ol' );\n\t\t\tif ( $ol.hasClass( 'mw-extended-references' ) ) {\n\t\t\t\t$parent = $ol.parent();\n\t\t\t}\n\t\t\t// The following classes are used here:\n\t\t\t// * external--reference\n\t\t\t// * other values of EXTERNAL_LINK_CLASS in sub-classes\n\t\t\t( $parent || $el ).find( '.external' ).addClass( this.EXTERNAL_LINK_CLASS );\n\t\t\tresult.resolve( {\n\t\t\t\ttext: this.getReferenceHtml( $el ),\n\t\t\t\tparentText: this.getReferenceHtml( $parent )\n\t\t\t} );\n\t\t} else {\n\t\t\tresult.reject( ReferencesGateway.ERROR_NOT_EXIST );\n\t\t}\n\t\treturn result.promise();\n\t},\n\t/**\n\t * @param {jQuery.Object|undefined} $reference\n\t * @returns {string}\n\t */\n\tgetReferenceHtml: function ( $reference ) {\n\t\treturn $reference ?\n\t\t\t$reference.find( '.mw-reference-text, .reference-text' ).first().html() :\n\t\t\t'';\n\t},\n\t/**\n\t * @inheritdoc\n\t * @memberof ReferencesHtmlScraperGateway\n\t * @instance\n\t * @param {string} id\n\t * @param {Page} page\n\t * @param {PageHTMLParser} pageHTMLParser\n\t */\n\tgetReference: function ( id, page, pageHTMLParser ) {\n\t\t// If an id is not found it's possible the id passed needs decoding (per T188547).\n\t\treturn this.getReferenceFromContainer( decodeURIComponent( id ), pageHTMLParser.$el.find( 'ol.references' ) );\n\t}\n} );\n\nmodule.exports = ReferencesHtmlScraperGateway;\n","var references,\n\tDrawer = require( '../Drawer' ),\n\tutil = require( '../util' ),\n\ticons = require( '../icons' ),\n\tReferencesGateway = require( './ReferencesGateway' ),\n\tIcon = require( '../Icon' );\n\n/**\n * Create a callback for clicking references\n *\n * @param {Function} onNestedReferenceClick\n * @return {Function}\n */\nfunction makeOnNestedReferenceClickHandler( onNestedReferenceClick ) {\n\treturn ( ev ) => {\n\t\tconst target = ev.target;\n\t\tif ( target.tagName === 'A' ) {\n\t\t\tonNestedReferenceClick(\n\t\t\t\ttarget.getAttribute( 'href' ),\n\t\t\t\ttarget.textContent\n\t\t\t);\n\t\t\t// Don't hide the already shown drawer via propagation\n\t\t\t// and stop default scroll behaviour.\n\t\t\treturn false;\n\t\t}\n\t};\n}\n\n/**\n * Drawer for references\n *\n * @uses Icon\n * @param {Object} props\n * @param {boolean} [props.error] whether an error has occurred\n * @param {string} props.title of reference e.g [1]\n * @param {string} props.text is the HTML of the reference\n * @param {string} [props.parentText] is the HTML of the parent reference if there is one\n * @param {Function} [props.onNestedReferenceClick] callback for when a reference\n *  inside the reference is clicked.\n * @return {Drawer}\n */\nfunction referenceDrawer( props ) {\n\tconst errorIcon = props.error ? new Icon( {\n\t\tname: 'error',\n\t\tisSmall: true\n\t} ).$el : null;\n\treturn new Drawer(\n\t\tutil.extend(\n\t\t\t{\n\t\t\t\tshowCollapseIcon: false,\n\t\t\t\tclassName: 'drawer position-fixed text references-drawer',\n\t\t\t\tevents: {\n\t\t\t\t\t'click sup': props.onNestedReferenceClick &&\n\t\t\t\t\t\tmakeOnNestedReferenceClickHandler( props.onNestedReferenceClick )\n\t\t\t\t},\n\t\t\t\tchildren: [\n\t\t\t\t\tutil.parseHTML( '<div>' )\n\t\t\t\t\t\t.addClass( 'references-drawer__header' )\n\t\t\t\t\t\t.append( [\n\t\t\t\t\t\t\tnew Icon( {\n\t\t\t\t\t\t\t\tisSmall: true,\n\t\t\t\t\t\t\t\tname: 'reference',\n\t\t\t\t\t\t\t\tmodifier: ''\n\t\t\t\t\t\t\t} ).$el,\n\t\t\t\t\t\t\tutil.parseHTML( '<span>' ).addClass( 'references-drawer__title' ).text( mw.msg( 'mobile-frontend-references-citation' ) ),\n\t\t\t\t\t\t\ticons.cancel( 'gray', {\n\t\t\t\t\t\t\t\tisSmall: true,\n\t\t\t\t\t\t\t\tmodifier: 'mw-ui-icon-element mw-ui-icon-flush-right'\n\t\t\t\t\t\t\t} ).$el\n\t\t\t\t\t\t] ),\n\t\t\t\t\t// Add .mw-parser-output so that TemplateStyles styles apply (T244510)\n\t\t\t\t\tutil.parseHTML( '<div>' ).addClass( 'mw-parser-output' ).append( [\n\t\t\t\t\t\terrorIcon,\n\t\t\t\t\t\tprops.parentText ?\n\t\t\t\t\t\t\tutil.parseHTML( '<div>' ).html( props.parentText ) :\n\t\t\t\t\t\t\t'',\n\t\t\t\t\t\tutil.parseHTML( '<sup>' ).text( props.title ),\n\t\t\t\t\t\tprops.text ?\n\t\t\t\t\t\t\tutil.parseHTML( '<span>' ).html( ' ' + props.text ) :\n\t\t\t\t\t\t\ticons.spinner().$el\n\t\t\t\t\t] )\n\t\t\t\t]\n\t\t\t},\n\t\t\tprops\n\t\t)\n\t);\n}\n\nreferences = {\n\ttest: {\n\t\tmakeOnNestedReferenceClickHandler\n\t},\n\treferenceDrawer,\n\t/**\n\t * Fetch and render nested reference upon click\n\t *\n\t * @param {string} id of the reference to be retrieved\n\t * @param {Page} page to locate reference for\n\t * @param {string} refNumber the number it identifies as in the page\n\t * @param {PageHTMLParser} pageHTMLParser\n\t * @param {Gateway} gateway\n\t * @param {Object} props for referenceDrawer\n\t * @param {Function} onShowNestedReference function call when a nested reference is triggered.\n\t * @return {jQuery.Deferred}\n\t */\n\tshowReference: function ( id, page, refNumber, pageHTMLParser, gateway, props,\n\t\tonShowNestedReference\n\t) {\n\t\treturn gateway.getReference( id, page, pageHTMLParser ).then( function ( reference ) {\n\t\t\tconst drawer = referenceDrawer( util.extend( {\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: reference.text,\n\t\t\t\tparentText: reference.parentText,\n\t\t\t\tonNestedReferenceClick: function ( href, text ) {\n\t\t\t\t\treferences.showReference(\n\t\t\t\t\t\thref,\n\t\t\t\t\t\tpage,\n\t\t\t\t\t\ttext,\n\t\t\t\t\t\tpageHTMLParser,\n\t\t\t\t\t\tgateway\n\t\t\t\t\t).then( ( nestedDrawer ) => {\n\t\t\t\t\t\tif ( props.onShowNestedReference ) {\n\t\t\t\t\t\t\tonShowNestedReference( drawer, nestedDrawer );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmw.log.warn( 'Please provide onShowNestedReferences parameter.' );\n\t\t\t\t\t\t\tdocument.body.appendChild( nestedDrawer.$el[ 0 ] );\n\t\t\t\t\t\t\tdrawer.hide();\n\t\t\t\t\t\t\tnestedDrawer.show();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}, props ) );\n\t\t\treturn drawer;\n\t\t}, function ( err ) {\n\t\t\t// If non-existent reference nothing to do.\n\t\t\tif ( err === ReferencesGateway.ERROR_NOT_EXIST ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn referenceDrawer( {\n\t\t\t\terror: true,\n\t\t\t\ttitle: refNumber,\n\t\t\t\ttext: mw.msg( 'mobile-frontend-references-citation-error' )\n\t\t\t} );\n\t\t} );\n\t}\n};\n\nmodule.exports = references;\n","/**\n * Coordinates the logging of MobileWebSchema events.\n * Implements schema defined at https://meta.wikimedia.org/wiki/Schema:MobileWebSearch\n *\n * @class\n */\nfunction MobileWebSearchLogger() {\n\tthis.userSessionToken = null;\n\tthis.searchSessionToken = null;\n}\n\nMobileWebSearchLogger.prototype = {\n\t/**\n\t * Sets the internal state required to deal with logging user session\n\t * data.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newUserSession: function () {\n\t\tthis.userSessionToken = mw.user.generateRandomSessionId();\n\t},\n\n\t/**\n\t * Sets the internal state required to deal with logging search session\n\t * data.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @private\n\t */\n\t_newSearchSession: function () {\n\t\tthis.searchSessionToken = mw.user.generateRandomSessionId();\n\t\tthis.searchSessionCreatedAt = new Date().getTime();\n\t},\n\n\t/**\n\t * Handles the 'search-show' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchShow: function () {\n\t\tthis._newUserSession();\n\t},\n\n\t/**\n\t * Handles the 'search-start' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t */\n\tonSearchStart: function () {\n\t\tthis._newSearchSession();\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'session-start',\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: 0\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-results' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {Object[]} event.results\n\t */\n\tonSearchResults: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'impression-results',\n\t\t\tresultSetType: 'prefix',\n\t\t\tnumberOfResults: event.results.length,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\t// FIXME: Unless I'm mistaken, the timeToDisplayResults\n\t\t\t// property isn't necessary.\n\t\t\ttimeToDisplayResults: timeOffsetSinceStart,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t},\n\n\t/**\n\t * Handles the 'search-result-click' event.\n\t *\n\t * @memberof MobileWebSearchLogger\n\t * @instance\n\t * @param {Object} event with property {number} event.index\n\t *  The zero-based index of the result in the set of results.\n\t */\n\tonSearchResultClick: function ( event ) {\n\t\tvar timeOffsetSinceStart =\n\t\t\tnew Date().getTime() - this.searchSessionCreatedAt;\n\n\t\tmw.track( 'mf.schemaMobileWebSearch', {\n\t\t\taction: 'click-result',\n\t\t\t// NOTE: clickIndex is 1-based.\n\t\t\tclickIndex: event.resultIndex + 1,\n\t\t\tuserSessionToken: this.userSessionToken,\n\t\t\tsearchSessionToken: this.searchSessionToken,\n\t\t\ttimeOffsetSinceStart: timeOffsetSinceStart\n\t\t} );\n\t}\n};\n\n/**\n * Convenience function that wires up an instance of the\n * MobileWebSearchLogger class to the search-* events emitted by the\n * search overlay.\n *\n * @memberof MobileWebSearchLogger\n * @param {SearchOverlay} searchOverlay\n */\nMobileWebSearchLogger.register = function ( searchOverlay ) {\n\tvar logger = new MobileWebSearchLogger();\n\n\tsearchOverlay.on( 'search-show', logger.onSearchShow.bind( logger ) );\n\tsearchOverlay.on( 'search-start', logger.onSearchStart.bind( logger ) );\n\tsearchOverlay.on( 'search-results', logger.onSearchResults.bind( logger ) );\n\tsearchOverlay.on( 'search-result-click', logger.onSearchResultClick.bind( logger ) );\n};\n\nmodule.exports = MobileWebSearchLogger;\n","const util = require( '../util' ),\n\tView = require( '../View' ),\n\tIcon = require( '../Icon' );\n\n/**\n * @extends View\n */\nclass SearchHeaderView extends View {\n\t/**\n\t * constructor\n\t *\n\t * @inheritdoc\n\t * @param {Object} props\n\t * @param {Function} props.onInput executed every time input changes\n\t * @param {string} props.placeholderMsg\n\t * @param {string} props.action\n\t * @param {string} [props.searchTerm] default\n\t */\n\tconstructor( props ) {\n\t\tsuper(\n\t\t\tutil.extend( {}, props, {\n\t\t\t\tevents: {\n\t\t\t\t\t'input input': 'onInput'\n\t\t\t\t}\n\t\t\t} )\n\t\t);\n\t}\n\t/** @inheritdoc */\n\tonInput( ev ) {\n\t\tconst query = ev.target.value;\n\t\tthis.options.onInput( query );\n\t\tif ( query ) {\n\t\t\tthis.clearIcon.$el.show();\n\t\t} else {\n\t\t\tthis.clearIcon.$el.hide();\n\t\t}\n\t}\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/** @inheritdoc */\n\tget template() {\n\t\treturn util.template( `<div class=\"overlay-title search-header-view\">\n\t\t<form method=\"get\" action=\"{{action}}\" class=\"search-box\">\n\t\t<input class=\"search\" type=\"search\" name=\"search\" autocomplete=\"off\" placeholder=\"{{placeholderMsg}}\" aria-label=\"{{placeholderMsg}}\" value=\"{{searchTerm}}\">\n\t\t</form>\n</div>` );\n\t}\n\t/** @inheritdoc */\n\tpostRender() {\n\t\tconst clearIcon = new Icon( {\n\t\t\ttagName: 'button',\n\t\t\tname: 'clear',\n\t\t\tisSmall: true,\n\t\t\tlabel: mw.msg( 'mobile-frontend-clear-search' ),\n\t\t\tadditionalClassNames: 'clear',\n\t\t\tevents: {\n\t\t\t\tclick: function () {\n\t\t\t\t\tthis.$el.find( 'input' ).val( '' ).trigger( 'focus' );\n\t\t\t\t\tthis.options.onInput( '' );\n\t\t\t\t\tclearIcon.$el.hide();\n\t\t\t\t\t// In beta the clear button is on top of the search input.\n\t\t\t\t\t// Stop propagation so that the input doesn't receive the click.\n\t\t\t\t\treturn false;\n\t\t\t\t}.bind( this )\n\t\t\t}\n\t\t} );\n\t\tthis.clearIcon = clearIcon;\n\t\tclearIcon.$el.hide();\n\t\tthis.$el.find( 'form' ).append( clearIcon.$el );\n\t}\n}\n\nmodule.exports = SearchHeaderView;\n","var\n\tmfExtend = require( '../mfExtend' ),\n\tOverlay = require( '../Overlay' ),\n\tutil = require( '../util' ),\n\tsearchHeader = require( './searchHeader' ),\n\tSearchResultsView = require( './SearchResultsView' ),\n\tWatchstarPageList = require( '../watchstar/WatchstarPageList' ),\n\tSEARCH_DELAY = 300,\n\tSEARCH_SPINNER_DELAY = 2000;\n\n/**\n * Overlay displaying search results\n *\n * @class SearchOverlay\n * @extends Overlay\n * @uses SearchGateway\n * @uses Icon\n *\n * @param {Object} params Configuration options\n * @param {string} params.placeholderMsg Search input placeholder text.\n * @param {string} [params.action] of form defaults to the value of wgScript\n * @param {SearchGateway} [params.gateway]\n * @fires SearchOverlay#search-show\n * @fires SearchOverlay#search-start\n * @fires SearchOverlay#search-results\n * @fires SearchOverlay#search-result-click\n */\nfunction SearchOverlay( params ) {\n\tvar header = searchHeader(\n\t\t\tparams.placeholderMsg,\n\t\t\tparams.action || mw.config.get( 'wgScript' ),\n\t\t\tfunction ( query ) {\n\t\t\t\tthis.performSearch( query );\n\t\t\t}.bind( this )\n\t\t),\n\t\toptions = util.extend( true, {\n\t\t\theaderChrome: true,\n\t\t\tisBorderBox: false,\n\t\t\tclassName: 'overlay search-overlay',\n\t\t\theaders: [ header ],\n\t\t\tevents: {\n\t\t\t\t'click .search-content': 'onClickSearchContent',\n\t\t\t\t'click .overlay-content': 'onClickOverlayContent',\n\t\t\t\t'click .overlay-content > div': function ( ev ) {\n\t\t\t\t\tev.stopPropagation();\n\t\t\t\t},\n\t\t\t\t'touchstart .results': 'hideKeyboardOnScroll',\n\t\t\t\t'mousedown .results': 'hideKeyboardOnScroll',\n\t\t\t\t'click .results a': 'onClickResult'\n\t\t\t}\n\t\t},\n\t\tparams );\n\n\tthis.header = header;\n\tOverlay.call( this, options );\n\n\tthis.api = options.api;\n\t// eslint-disable-next-line new-cap\n\tthis.gateway = options.gateway || new options.gatewayClass( this.api );\n\n\tthis.router = options.router;\n}\n\nmfExtend( SearchOverlay, Overlay, {\n\n\t/**\n\t * Initialize 'search within pages' functionality\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickSearchContent: function () {\n\t\tvar $el = util.getDocument().find( 'body' ),\n\t\t\t$form = this.$el.find( 'form' );\n\n\t\t// Add fulltext input to force fulltext search\n\t\tthis.parseHTML( '<input>' )\n\t\t\t.attr( {\n\t\t\t\ttype: 'hidden',\n\t\t\t\tname: 'fulltext',\n\t\t\t\tvalue: 'search'\n\t\t\t} )\n\t\t\t.appendTo( $form );\n\t\t// history.back queues a task so might run after this call. Thus we use setTimeout\n\t\t// http://www.w3.org/TR/2011/WD-html5-20110113/webappapis.html#queue-a-task\n\t\tsetTimeout( function () {\n\t\t\t// Firefox doesn't allow submission of a form not in the DOM\n\t\t\t// so temporarily re-add it\n\t\t\t$form.appendTo( $el );\n\t\t\t$form.trigger( 'submit' );\n\t\t}, 0 );\n\t},\n\n\t/**\n\t * Tapping on background only should hide the overlay\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tonClickOverlayContent: function () {\n\t\tthis.$el.find( '.cancel' ).trigger( 'click' );\n\t},\n\n\t/**\n\t * Hide the keyboard when scrolling starts (avoid weird situation when\n\t * user taps on an item, the keyboard hides and wrong item is clicked).\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\thideKeyboardOnScroll: function () {\n\t\tthis.$input.trigger( 'blur' );\n\t},\n\n\t/**\n\t * Handle the user clicking a result.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {jQuery.Event} ev\n\t */\n\tonClickResult: function ( ev ) {\n\t\tvar $link = this.$el.find( ev.currentTarget ),\n\t\t\t$result = $link.closest( 'li' );\n\t\t/**\n\t\t * Fired when the user clicks a search result\n\t\t *\n\t\t * @event SearchOverlay#search-result-click\n\t\t * @type {Object}\n\t\t * @property {jQuery.Object} result The jQuery-wrapped DOM element that\n\t\t *  the user clicked\n\t\t * @property {number} resultIndex The zero-based index of the\n\t\t *  result in the set of results\n\t\t * @property {jQuery.Event} originalEvent The original event\n\t\t */\n\t\tthis.emit( 'search-result-click', {\n\t\t\tresult: $result,\n\t\t\tresultIndex: this.$results.index( $result ),\n\t\t\toriginalEvent: ev\n\t\t} );\n\n\t\t// FIXME: ugly hack that removes search from browser history\n\t\t// when navigating to search results\n\t\tev.preventDefault();\n\t\tthis.router.back().then( function () {\n\t\t\t// Router.navigate does not support changing href.\n\t\t\t// FIXME: Needs upstream change T189173\n\t\t\t// eslint-disable-next-line no-restricted-properties\n\t\t\twindow.location.href = $link.attr( 'href' );\n\t\t} );\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tpostRender: function () {\n\t\tvar self = this,\n\t\t\tsearchResults = new SearchResultsView( {\n\t\t\t\tsearchContentLabel: mw.msg( 'mobile-frontend-search-content' ),\n\t\t\t\tnoResultsMsg: mw.msg( 'mobile-frontend-search-no-results' ),\n\t\t\t\tsearchContentNoResultsMsg: mw.message( 'mobile-frontend-search-content-no-results' ).parse()\n\t\t\t} ),\n\t\t\ttimer;\n\n\t\tthis.$el.find( '.overlay-content' ).append( searchResults.$el );\n\t\tOverlay.prototype.postRender.call( this );\n\n\t\t// FIXME: `this.$input` should not be set. Isolate to searchHeader function\n\t\tthis.$input = this.$el.find( this.header ).find( 'input' );\n\t\t// FIXME: `this.$searchContent` should not be set. Isolate to SearchResultsView class.\n\t\tthis.$searchContent = searchResults.$el.hide();\n\t\t// FIXME: `this.$resultContainer` should not be set. Isolate to SearchResultsView class.\n\t\tthis.$resultContainer = searchResults.$el.find( '.results-list-container' );\n\n\t\t/**\n\t\t * Hide the spinner and abort timed spinner shows.\n\t\t * FIXME: Given this manipulates SearchResultsView this should be moved into that class\n\t\t */\n\t\tfunction clearSearch() {\n\t\t\tself.$spinner.hide();\n\t\t\tclearTimeout( timer );\n\t\t}\n\n\t\t// Show a spinner on top of search results\n\t\t// FIXME: Given this manipulates SearchResultsView this should be moved into that class\n\t\tthis.$spinner = searchResults.$el.find( '.spinner-container' );\n\t\tthis.on( 'search-start', function ( searchData ) {\n\t\t\tif ( timer ) {\n\t\t\t\tclearSearch();\n\t\t\t}\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tself.$spinner.show();\n\t\t\t}, SEARCH_SPINNER_DELAY - searchData.delay );\n\t\t} );\n\t\tthis.on( 'search-results', clearSearch );\n\t},\n\n\t/**\n\t * Trigger a focus() event on search input in order to\n\t * bring up the virtual keyboard.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshowKeyboard: function () {\n\t\tvar len = this.$input.val().length;\n\t\tthis.$input.trigger( 'focus' );\n\t\t// Cursor to the end of the input\n\t\tif ( this.$input[0].setSelectionRange ) {\n\t\t\tthis.$input[0].setSelectionRange( len, len );\n\t\t}\n\t},\n\n\t/**\n\t * @inheritdoc\n\t * @memberof SearchOverlay\n\t * @instance\n\t */\n\tshow: function () {\n\t\t// Overlay#show defines the actual overlay visibility.\n\t\tOverlay.prototype.show.apply( this, arguments );\n\n\t\tthis.showKeyboard();\n\t\t/**\n\t\t * Fired after the search overlay is shown\n\t\t *\n\t\t * @event SearchOverlay#search-show\n\t\t */\n\t\tthis.emit( 'search-show' );\n\t},\n\n\t/**\n\t * Perform search and render results inside current view.\n\t * FIXME: Much of the logic for caching and pending queries inside this function should\n\t * actually live in SearchGateway, please move out.\n\t *\n\t * @memberof SearchOverlay\n\t * @instance\n\t * @param {string} query\n\t */\n\tperformSearch: function ( query ) {\n\t\tvar\n\t\t\tself = this,\n\t\t\tapi = this.api,\n\t\t\tdelay = this.gateway.isCached( query ) ? 0 : SEARCH_DELAY;\n\n\t\t// it seems the input event can be fired when virtual keyboard is closed\n\t\t// (Chrome for Android)\n\t\tif ( query !== this.lastQuery ) {\n\t\t\tif ( self._pendingQuery ) {\n\t\t\t\tself._pendingQuery.abort();\n\t\t\t}\n\t\t\tclearTimeout( this.timer );\n\n\t\t\tif ( query.length ) {\n\t\t\t\tthis.timer = setTimeout( function () {\n\t\t\t\t\tvar xhr;\n\t\t\t\t\t/**\n\t\t\t\t\t * Fired immediately before the search API request is sent\n\t\t\t\t\t *\n\t\t\t\t\t * @event SearchOverlay#search-start\n\t\t\t\t\t * @property {Object} data related to the current search\n\t\t\t\t\t */\n\t\t\t\t\tself.emit( 'search-start', {\n\t\t\t\t\t\tquery: query,\n\t\t\t\t\t\tdelay: delay\n\t\t\t\t\t} );\n\n\t\t\t\t\txhr = self.gateway.search( query );\n\t\t\t\t\tself._pendingQuery = xhr.then( function ( data ) {\n\t\t\t\t\t\t// FIXME: Given this manipulates SearchResultsView\n\t\t\t\t\t\t// this should be moved into that class\n\t\t\t\t\t\t// check if we're getting the rights response in case of out of\n\t\t\t\t\t\t// order responses (need to get the current value of the input)\n\t\t\t\t\t\tif ( data && data.query === self.$input.val() ) {\n\t\t\t\t\t\t\tself.$el.toggleClass( 'no-results', data.results.length === 0 );\n\t\t\t\t\t\t\tself.$searchContent\n\t\t\t\t\t\t\t\t.show()\n\t\t\t\t\t\t\t\t.find( 'p' )\n\t\t\t\t\t\t\t\t.hide()\n\t\t\t\t\t\t\t\t.filter( data.results.length ? '.with-results' : '.without-results' )\n\t\t\t\t\t\t\t\t.show();\n\n\t\t\t\t\t\t\t// eslint-disable-next-line no-new\n\t\t\t\t\t\t\tnew WatchstarPageList( {\n\t\t\t\t\t\t\t\tapi: api,\n\t\t\t\t\t\t\t\tfunnel: 'search',\n\t\t\t\t\t\t\t\tpages: data.results,\n\t\t\t\t\t\t\t\tel: self.$resultContainer\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\tself.$results = self.$resultContainer.find( 'li' );\n\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * Fired when search API returns results\n\t\t\t\t\t\t\t *\n\t\t\t\t\t\t\t * @event SearchOverlay#search-results\n\t\t\t\t\t\t\t * @type {Object}\n\t\t\t\t\t\t\t * @property {Object[]} results The results returned by the search\n\t\t\t\t\t\t\t *  API\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tself.emit( 'search-results', {\n\t\t\t\t\t\t\t\tresults: data.results\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t} ).promise( { abort: function () { xhr.abort(); } } );\n\t\t\t\t}, delay );\n\t\t\t} else {\n\t\t\t\tself.resetSearch();\n\t\t\t}\n\n\t\t\tthis.lastQuery = query;\n\t\t}\n\t},\n\t/**\n\t * Clear results\n\t *\n\t * @private\n\t */\n\tresetSearch: function () {\n\t\tthis.$el.find( '.overlay-content' ).children().hide();\n\t}\n} );\n\nmodule.exports = SearchOverlay;\n","const View = require( '../View' ),\n\tIcon = require( '../Icon' ),\n\tAnchor = require( '../Anchor' ),\n\ticons = require( '../icons' ),\n\t$spinner = icons.spinner().$el,\n\tutil = require( '../util' );\n\n/**\n * @class SearchResultsView\n * @extends View\n * @param {Object} options\n * @param {string} options.searchContentLabel actionable label to tell the user they can \"search\n *  within pages rather than doing a full text search\n * @param {string} options.noResultsMsg shows when no results displayed\n * @param {string} options.searchContentNoResultsMsg alternative to options.searchContentLabel that\n * shows when no search results have been displayed.\n */\nclass SearchResultsView extends View {\n\t/** @inheritdoc */\n\tget isTemplateMode() {\n\t\treturn true;\n\t}\n\t/** @inheritdoc */\n\tget template() {\n\t\treturn util.template( `\n<div class=\"search-results-view\">\n\t<div class=\"search-content overlay-header\">\n\t\t<ul>\n\t\t\t<li>{{! search content icon goes here }}</li>\n\t\t</ul>\n\t\t<div class=\"caption\">\n\t\t\t<p class=\"with-results\">{{searchContentLabel}}</p>\n\t\t\t<p class=\"without-results\">{{noResultsMsg}}</p>\n\t\t\t<p class=\"without-results\">{{{searchContentNoResultsMsg}}}</p>\n\t\t</div>\n\t</div>\n\t<div class=\"spinner-container position-fixed\"></div>\n\t<div class=\"results\">\n\t\t<div class=\"results-list-container\"></div>\n\t\t{{#feedback}}\n\t\t\t<div class=\"search-feedback\">\n\t\t\t\t{{prompt}}\n\t\t\t</div>\n\t\t{{/feedback}}\n\t</div>\n</div>`\n\t\t);\n\t}\n\t/** @inheritdoc */\n\tpreRender() {\n\t\tconst feedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\t\tif ( feedbackLink ) {\n\t\t\tthis.options.feedback = {\n\t\t\t\tprompt: mw.msg( 'mobile-frontend-search-feedback-prompt' ) };\n\t\t}\n\t}\n\t/** @inheritdoc */\n\tpostRender( options ) {\n\t\tconst feedbackLink = mw.config.get( 'wgCirrusSearchFeedbackLink' );\n\t\tsuper.postRender( options );\n\t\tthis.$el.find( '.search-content li' ).append(\n\t\t\tnew Icon( {\n\t\t\t\ttagName: 'a',\n\t\t\t\t// When this icon is clicked we want to reset the hash for subsequent views\n\t\t\t\thref: '#',\n\t\t\t\tname: 'articlesSearch',\n\t\t\t\tadditionalClassNames: 'mw-ui-icon-flush-left',\n\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-content' )\n\t\t\t} ).$el\n\t\t);\n\t\tthis.$el.find( '.spinner-container' ).append( $spinner );\n\t\tif ( feedbackLink ) {\n\t\t\tthis.$el.find( '.search-feedback' ).append(\n\t\t\t\tnew Anchor( {\n\t\t\t\t\tlabel: mw.msg( 'mobile-frontend-search-feedback-link-text' ),\n\t\t\t\t\thref: feedbackLink\n\t\t\t\t} ).$el\n\t\t\t);\n\t\t}\n\t}\n}\n\nmodule.exports = SearchResultsView;\n","const formHeader = require( '../headers' ).formHeader,\n\tSearchHeaderView = require( './SearchHeaderView' ),\n\ticons = require( '../icons' );\n\n/**\n * Generate a search header\n *\n * @param {string} placeholderMsg\n * @param {string} action\n * @param {Function} onInput\n * @return {jQuery.Element}\n */\nfunction searchHeader( placeholderMsg, action, onInput ) {\n\treturn formHeader(\n\t\tnew SearchHeaderView( {\n\t\t\tplaceholderMsg,\n\t\t\taction,\n\t\t\tonInput\n\t\t} ),\n\t\t[\n\t\t\ticons.cancel()\n\t\t],\n\t\tfalse\n\t);\n}\n\nmodule.exports = searchHeader;\n"],"sourceRoot":""}